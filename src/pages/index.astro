---
import { mapDataForChart } from "../chart"
import DataTable from "../components/DataTable.astro"
import FootnoteRef from "../components/FootnoteRef.astro"
import { downloadData } from "../downloadData"
import "../css/base.css"
import { formatDate } from "../util"

const downloadedData = await downloadData()
const chartData = mapDataForChart(downloadedData)

const currentDateTime = formatDate(new Date())
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/tardis.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Doctor Who Ratings</title>
  </head>
  <body>
    <div class="container mx-auto pt-12">
      <div class="text-center">
        <div class="flex justify-center items-center gap-4">
          <img src="/tardis.svg" alt="TARDIS" width="25" />
          <div>
            <h1 class="text-3xl font-bold">Doctor Who Ratings</h1>
            <p class="font-semibold">Who is the Who to watch?</p>
          </div>
        </div>
        <div class="mt-4 mb-8 max-w-prose mx-auto space-y-2">
          <p>
            I originally tracked this in a <a
              href="https://docs.google.com/spreadsheets/d/1-TnaX9iGBOfCbTPVnTmwwFRKdrR959Hus2ttv7NdE08/edit?usp=sharing"
              target="_blank"
              class="link">spreadsheet</a
            > but making an auto-updating one with more data sounded more fun :P
          </p>
          <p>
            This site will <span class="text-xs">(should)</span> auto-update! Updated
            on
            <span class="font-semibold">{currentDateTime} </span>
          </p>
        </div>
      </div>

      <div class="flex flex-col items-center">
        <DataTable downloadedData={downloadedData} />
        <div class="flex text-sm mt-2">
          <FootnoteRef num={1}>RT: Rotten Tomatoes</FootnoteRef>
          <FootnoteRef num={2}>MC: Metacritic</FootnoteRef>
          <FootnoteRef num={3}>TMDB: The Movie Database</FootnoteRef>
          <FootnoteRef num={4}
            >The average of the Rotten Tomatoes (Scaled to 0-10), Metacritic,
            and TMDB audience scores. Missing values are excluded</FootnoteRef
          >
        </div>
      </div>

      <div id="chart"></div>
      <div class="mt-10 mb-4 text-center">
        <hr />
        <p class="text-sm mt-4 text-slate-500">
          Doctor Who and all related trademarks and copyrights are the property
          of the BBC. This site is fan-made and not affiliated with or endorsed
          by the BBC.
        </p>
        <p class="text-sm text-slate-500 mt-2">
          Made with ðŸª„, Astro and Tailwind CSS &middot; <a target="_blank" class="link" href="https://github.com/binaryoverload/doctor-who-ranking">GitHub Repo</a> &middot; <a target="_blank" class="link" href="https://github.com/binaryoverload">@binaryoverload</a>
        </p>
      </div>
    </div>
    <script>
      import { setupChart } from "../chart";

      declare global {
        interface Window {
          setupChart: typeof setupChart;
        }
      }

      window.setupChart = setupChart;
    </script>
    <script is:inline define:vars={{ chartData }}>
      document.addEventListener("DOMContentLoaded", () => {
        window.setupChart(chartData, document.getElementById("chart"));
      });
    </script>
  </body>
</html>
