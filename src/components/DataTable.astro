---
import type { SeasonData } from "../downloadData"
import DataTableRow from "./DataTableRow.astro"
import FootnoteNum from "./FootnoteNum.astro"
import * as util from "../util"

interface Props {
  downloadedData: SeasonData[]
}

function getAverageScore(data: SeasonData) {
  return util.round(
    util.avg(
      Number(data.rottenTomatoesData?.critics?.score) / 10 || null,
      data.metaCriticData?.userScore,
      data.tmdbData?.voteAverage
    ),
    1
  )
}

const averageScores = Astro.props.downloadedData.map((d) => getAverageScore(d))

function getRank(averageScore: number) {
  return (
    [...new Set(averageScores)].toSorted().reverse().indexOf(averageScore) + 1
  )
}
---

<table class="border border-slate-400 text-left min-w-max">
  <thead class="border-b border-slate-400">
    <tr class="[&>th]:px-2 [&>th]:py-1 divide-x divide-slate-200 text-sm">
      <th>Season</th>
      <th>Doctor</th>
      <th>Showrunner</th>
      <th colspan="2">Aired</th>
      <th class="text-right">
        RT<FootnoteNum num={1} /> Critic <br />
        <p class="text-xs font-semibold text-center">(0-100%)</p>
      </th>
      <th class="text-right">
        RT<FootnoteNum num={1} /> Audience <br />
        <p class="text-xs font-semibold text-center">(0-100%)</p>
      </th>
      <th class="text-right"
        >MC<FootnoteNum num={2} /> Critic <br />
        <p class="text-xs font-semibold text-center">(0-100%)</p>
      </th>
      <th class="text-right">
        MC<FootnoteNum num={2} /> User <br />
        <p class="text-xs font-semibold text-center">(0-10)</p>
      </th>
      <th class="text-right">
        TMDB<FootnoteNum num={3} /><br />
        <p class="text-xs font-semibold text-center">(0-10)</p>
      </th>
      <th class="text-right">
        User Average<FootnoteNum num={4} />
        <br />
        <p class="text-xs font-semibold text-center">(0-10)</p>
      </th>
      <th class="text-right">Rank</th>
    </tr>
  </thead>
  <tbody class="divide-y [&>tr]:divide-x divide-slate-200">
    {
      Astro.props.downloadedData.map((data, i) => (
        <DataTableRow
          data={data}
          averageScore={averageScores[i]}
          rank={getRank(averageScores[i])}
        />
      ))
    }
  </tbody>
</table>
